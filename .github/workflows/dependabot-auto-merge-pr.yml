name: Dependabot auto merge PR

on:
  workflow_run:
    workflows: ["Publish Nuget packages"]
    types:
    - completed

defaults:
  run:
    shell: pwsh

jobs:

  auto-merge-pr:
    name: test download
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      continue-on-error: true
      with:
        workflow: nuget-publish.yml
        workflow_conclusion: success
        name: pr-url
    - name: Build
      run: |
        if(Test-Path -Path ./pr.txt -PathType Leaf){
          Write-Host "OK"
          exit 0;
        }
        Write-Host "Not Found"

  #   - name: Print it
  #     shell: pwsh
  #     run: Get-Content ./pr-url.txt
  #   - name: Print github payload
  #     shell: pwsh
  #     run: Write-Host "${{ github.payload }}"
  #   - name: Print github actor
  #     shell: pwsh
  #     run: Write-Host "${{ github.actor }}"
  #   - name: Print github actor url
  #     shell: pwsh
  #     run: Write-Host "${{ github.actor.url }}"

  # auto-approve-and-merge:
  #   needs: [nuget-publish]
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]' }}
  #   steps:
  #   - name: Fetch Dependabot metadata
  #     id: dependabot-metadata
  #     uses: dependabot/fetch-metadata@v1.1.0
  #     with:
  #       github-token: '${{ secrets.GITHUB_TOKEN }}'
  #   - name: Auto approve and merge the PR
  #     run: |
  #       # echo "gh auth status"
  #       # gh auth status
  #       # echo "gh auth status --show-token"
  #       # gh auth status --show-token
  #       echo "gh pr merge --auto --squash --delete-branch"
  #       # gh pr merge --auto --squash --delete-branch "$PR_URL"
  #       # echo "gh pr review --approve"
  #       # gh pr review --approve "$PR_URL"
  #     env:
  #       PR_URL: '${{ github.event.pull_request.html_url }}'
  #       # Depending on branch protection rules, a  manually populated
  #       # `GITHUB_TOKEN_WORKAROUND` secret with permissions to push to
  #       # a protected branch must be used.
  #       #
  #       # When using a custom token, it is recommended to leave the following
  #       # comment for other developers to be aware of the reasoning behind it:
  #       #
  #       # This must be used as GitHub Actions token does not support pushing
  #       # to protected branches.
  #       GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      